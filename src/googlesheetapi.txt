//googleSheetsHelper.ts

import { gapi } from "gapi-script";

// Function to load the Google API client and authenticate
export const initGoogleSheetsAPI = (clientId: string) => {
  return new Promise((resolve, reject) => {
    gapi.load("client:auth2", async () => {
      try {
        await gapi.client.init({
          clientId: clientId,
          scope: "https://www.googleapis.com/auth/spreadsheets.readonly",
        });

        const authInstance = gapi.auth2.getAuthInstance();
        if (!authInstance.isSignedIn.get()) {
          await authInstance.signIn();
        }
        resolve(gapi.client);
      } catch (error) {
        reject(error);
      }
    });
  });
};

// Function to fetch data from Google Sheets
export const fetchGoogleSheetData = async (spreadsheetId: string, range: string) => {
  try {
    const response = await gapi.client.sheets.spreadsheets.values.get({
      spreadsheetId: spreadsheetId,
      range: range,
    });
    return response.result.values;
  } catch (error) {
    console.error("Error fetching Google Sheet data", error);
    return null;
  }
};
